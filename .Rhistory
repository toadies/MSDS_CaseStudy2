ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >-200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", ttest$p.value, sep=" "))
}
# reduce columes
names(checkins.filter)
breweryIds <- unique(checkins.filter[,1:2])
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >-200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", ttest$p.value, sep=" "))
}
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >-200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=200 && checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
checkins.filter$totalCheckins >=200
checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1]
which(checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1])
t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
i
which(checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1], checkins.filter$isBreweryLocation=="Y")
which(checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1], checkins.filter$isBreweryLocation=="N")
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
summary(checkins.filter[checkins.filter$totalCheckins >=200 & checkins.filter$breweryId==breweryIds[i,1],])
breweryIds[i,2]
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
print(1.47152473692712e-05, digits = 100)
print(1.47152473692712e-05, digit = 100)
print(1.47152473692712e-05
print(1.47152473692712e-05)
1.47152473692712e-05
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
?count
?group_by
names(checkins.filter)
count(checkins.filter[,c(13,31)])
count(tbl(checkins.filter[,c(13,31)])
)
tbl(checkins.filter)
group_by(checkins.filter[,c(13,31)])
group_by(checkins.filter[,c(13,31)]) %>% count(checkins.filter$checkinId)
?group_by
group_by(checkins.filter[,c(13,31)]) %>%
summarise(
independent.freq = count(checkins.filter$checkinId)
)
group_by(checkins.filter[,c(13,31)]) %>%
summarise(
independent.freq = count(checkins.filter$checkinId)
)
summarise(
independent.freq = count(checkins.filter$checkinId)
)
count(checkins.filter$checkinId)
species <- starwars %>% count(species, homeworld, sort = TRUE)
species
starwars
species <- class(starwars) %>% count(species, homeworld, sort = TRUE)
class(starwars)
# Removing Independence
checkins.filter %>% count(userId, isBreweryLocation, sort = TRUE)
# Removing Independence
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
checkins.filter[checkins.filter$userId==2290456,]
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE) %>% mean(ratingScore)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE) %>% mean(ratingScore, rm.na=T)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
?summarise
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% group_by(userId, beerId, isBreweryLocation, sort = TRUE)
group_by(userId, beerId, isBreweryLocation, sort = TRUE)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% group_by(userId, beerId, isBreweryLocation, sort = TRUE)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% group_by(checkins.filter$userId, checkins.filter$beerId, isBreweryLocation, sort = TRUE)
group_by(checkins.filter$userId, checkins.filter$beerId, isBreweryLocation, sort = TRUE)
count(tbl(checkins.filter[,c(13,3
)]
group_by(checkins.filter[,c(13,31)])
group_by(checkins.filter[,c(13,31),])
checkins.filter[,c(13,31),]
group_by(checkins.filter[,c(13,31),])
group_by(checkins.filter[,c(13,31),]) %>% mean(checkins.filter$ratingScore)
summary(checkins.filter$ratingScore)
checkins.filter %>% group_by(userId, beerId, isBreweryLocation)
checkins.filter %>% group_by(userId, beerId, isBreweryLocation) %>% summarise( iRathingScore = mean(checkins.filter$ratingScore))
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
# iTotalCheckins = count()
)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore),
iTotalCheckins = count(checkinId)
)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
) %>%
count(userId, beerId, isBreweryLocation, sort = TRUE)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore),
count(userId, beerId, isBreweryLocation, sort = TRUE)
)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore),
x = count(userId, beerId, isBreweryLocation, sort = TRUE)
)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)[checkins.filter$userId==2290456,]
checkins.filter.indpendent <- checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
checkins.filter.indpendent$userId == 2290456
checkins.filter.indpendent[checkins.filter.indpendent$userId == 2290456,]
checkins.filter.independent <- inner_join(checkins.filter, checkins.filter.independent)
checkins.filter.independent <- checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
checkins.filter.independent <- inner_join(checkins.filter, checkins.filter.independent)
dim(checkins.filter.independent)
checkins.filter.independent <- inner_join(checkins.filter, checkins.filter.independent)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
checkins.filter <- checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
checkins.filter.independent <- inner_join(checkins.filter, checkins.filter.independent)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
checkins.filter.independent <- checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
checkins <- read.csv("data/checkins.csv")
# remove no venue checkins
checkins.filter <- checkins[!is.na(checkins$isBreweryLocation),]
dim(checkins.filter)
# remove 0 rating scores
checkins.filter <- checkins.filter[checkins.filter$ratingScore != 0,]
dim(checkins.filter)
checkins.filter.independent <- checkins.filter %>%
group_by(userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
checkins.filter <- inner_join(checkins.filter, checkins.filter.independent)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=50 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
round(ttest$p.value, 5)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
checkins.filter.independent <- checkins.filter %>%
group_by(breweryId, breweryName, userId, beerId, isBreweryLocation) %>%
summarise(
iRatingScore = mean(ratingScore)
)
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
checkins.filter.independent %>% count(breweryId, isBrewerylocation, sort = TRUE)
checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
# Accounting for independent
# creating an avg for users who rated multiple times
checkins.filter %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
checkins.filter %>% count(breweryId, isBreweryLocation, sort = TRUE)
checkins.filter %>% count(breweryId, isBreweryLocation, sort = FASLE)
checkins.filter %>% count(breweryId, isBreweryLocation, sort = FALSE)
checkins.filter %>% count(breweryId, isBreweryLocation, sort = TRUE)
checkins.filter.independent
checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
class(checkins.filter.independent)
checkins.filter.independent
?mutate
checkins.filter.independent <- as.data.frame(checkins.filter.independent)
checkins.filter.independent
checkins.filter.independent %>% count(userId, beerId, isBreweryLocation, sort = TRUE)
checkins.filter.independent %>% count(beerId, sort = TRUE)
tail(checkins.filter.independent %>% count(beerId, sort = TRUE))
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter$totalCheckins > 1 && checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter$totalCheckins > 1 & checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
tail(checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE))
checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$totalCheckins > 1 & checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$totalCheckins > 1 & checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
}
print( pylr::count(checkins.filter.independent$breweryId==breweryIds[i,1]$isBreweryLocation
print( pylr::count(checkins.filter.independent$breweryId==breweryIds[i,1]$isBreweryLocation)}
print( pylr::count(checkins.filter.independent$breweryId==breweryIds[i,1]$isBreweryLocation)
}
print( pylr::count(checkins.filter.independent$breweryId==breweryIds[i,1]$isBreweryLocation))
print( plyr::count(checkins.filter.independent$breweryId==breweryIds[i,1]$isBreweryLocation))
print( plyr::count(checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],]isBreweryLocation))
print( plyr::count(checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],]$isBreweryLocation))
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
print( plyr::count(checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],]$isBreweryLocation))
}
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
print( plyr::count(checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],]$isBreweryLocation))
}
t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$breweryId==48372,],
var.equal=T, conf.level=0.95
)
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
distinctBeerIds <- plyr::count(checkins.filter, "beerId")
names(distinctBeerIds) <- c("beerId","totalCheckins")
checkins.filter <- inner_join(checkins.filter, distinctBeerIds, by = c("beerId" = "beerId") )
breweryIds <- unique(checkins.filter[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
ratingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter$totalCheckins >=100 & checkins.filter$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", print(ttest$p.value, digits = 18), sep=" "))
}
# checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
plyr::count(checkins.filter.independent, "beerId")
View(checkins.filter)
# checkins.filter.independent %>% count(breweryId, isBreweryLocation, sort = TRUE)
distinctBeerIds <- plyr::count(checkins.filter.independent, "beerId")
names(distinctBeerIds) <- c("beerId","totalCheckins")
checkins.filter.independent <- inner_join(checkins.filter.independent, distinctBeerIds, by = c("beerId" = "beerId") )
breweryIds <- unique(checkins.filter.independent[,1:2])
for(i in 1:length(breweryIds$breweryId)){
ttest <- t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$totalCheckins >=100 & checkins.filter.independent$breweryId==breweryIds[i,1],],
var.equal=T, conf.level=0.95
)
print( paste( breweryIds[i,2], "-", breweryIds[i,1], "-", round(ttest$p.value, 5), sep=" "))
print( plyr::count(checkins.filter.independent[checkins.filter.independent$breweryId==breweryIds[i,1],]$isBreweryLocation))
}
t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter[checkins.filter.independent$totalCheckins >=100 & checkins.filter$breweryId==48372,],
var.equal=T, conf.level=0.95
)
t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$totalCheckins >=100 & checkins.filter.independent$breweryId==48372,],
var.equal=T, conf.level=0.95
)
t.test(
iRatingScore ~ isBreweryLocation,
data=checkins.filter.independent[checkins.filter.independent$totalCheckins >=100 & checkins.filter.independent$breweryId==45011,],
var.equal=T, conf.level=0.95
)
exp(5.9129)
2^0.8196
2^.6788
2^0.9605
exp(9.3416)
exp(10.0334)
exp(9.6875)
exp(.7121)
exp(.2652)
exp(1.159)
exp(.9835)
exp(.5696)
exp(1.159)
1.3975
exp(1.3975)
2^(-.3)
2^(-.3466)
2^(-.5134)
2^(-.1798)
2(-0.4783)
2^(-0.4783)
2^(-.1206)
exp(0.2652)
exp(1.1591)
2^(.1206)
2^(.8196-.3)
2^.6733
.8196 - ..29999
.8196 - .29999
.8196 - 1.433
.8196 - .1433
.8196 - .143365
2^.473
log(0)
